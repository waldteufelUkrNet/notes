////////////////////////////////////////////////////////////////////////////////

// http://registry.npmjs.org/            - репозиторій усіх модулів
// http://registry.npmjs.org/module_name - інфо на конкретний модуль


// Команди npm

// npm init                  - створення файлу package.json
// npm addu[ser]             - реєстрація користувача, потрібна для публікації
//                             пакунків
// npm pu[blish]             - вивантаження пакунку, а-ля "git push"
// npm s[earch] key_words    - пошук пакунка
// npm i[nstall] module_name - встановлення пакунка
// npm i express@3.0.2       - поставити конкретну версію пакунка
// npm up[date]              - перевірка наявних модулів і за необхідності їх
//                             оновлення
// npm r[emove] module_name  - видалення пакета


// Структура пакета:

// name (dir)
// |-- index.js
// |-- package.json

// при установці модуля він встає в директорію node_modules, найближчу по
// ієрархії вгору, якщо такої директорії нема, Node.js шукає файл package.json,
// і тільки якщо ні того, ні другого нема, пакунок встановлюється в поточну
// директорію.


// У файлі package.json є секція scripts, вона використовується для короткого
// запису команд консолі, напр.

  {
    "name": "modulesapp",
    "version": "1.0.0",
    "scripts" : {
      "start" : "node app.js",
      "dev" : "node app.js Tom 26"
    }
  }

// В консолі замість node app.js        можна набирати npm start.
//     -- // --      node app.js Tom 26    -- // --    npm run dev

// Є кілька зарезервованих команд (start, end, …), вони викликаються напряму,
// решта - через проміжну команду run.і