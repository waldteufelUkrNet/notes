There are four different position values:

static(default)
relative
fixed
absolute

Elements are then positioned using the top, bottom, left, and right properties. However, these properties will not work unless the position property is set first. They also work differently depending on the position value.

position: static;
An element with position: static; is not positioned in any special way; it is always positioned according to the normal flow of the page.

position: relative;
An element with position: relative; is positioned relative to its normal position.
Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position. Other content will not be adjusted to fit into any gap left by the element.

position: fixed;
An element with position: fixed; is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.
A fixed element does not leave a gap in the page where it would normally have been located.

position: absolute;
An element with position: absolute; is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).
However; if an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling.

	абсолютна позиц≥€ тексту зл≥ва-зверху:
	
	.topleft {
		position: absolute;
		top: 8px;
		left: 16px;
		font-size: 18px;
	}

	абсолютна позиц≥€ тексту по центру:
	
		.center {
		position: absolute;
		left: 0;				/* текст краще р≥вн€ти text-align: center; */
		top: 50%;
		width: 100%;
		text-align: center;
		font-size: 18px;
	}
	
	обр≥зка абсолютно-позиц≥йованого елементу:
	
	img {
		position: absolute;
		clip: rect(0px,10px,60px,0px);
	}

Overlapping Elements
When elements are positioned, they can overlap other elements.
The z-index property specifies the stack order of an element (which element should be placed in front of, or behind, the others).
An element can have a positive or negative stack order.
An element with greater stack order is always in front of an element with a lower stack order.
If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top.


при absolute €кщо {width: auto; left: 20px; right: 20px;}, елемент розт€гнетьс€, €кщо {width: значенн€;} - вибере left: 20px;
при absolute span стаЇ блочним, при relative - залишаЇтьс€ inline.
