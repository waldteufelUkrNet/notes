Cookie
================================================================================

ЩО ЦЕ ТАКЕ
----------

Cookie - це не великі рядки даних, зберігаються в браузері. Є частиною
HTTP-протоколу. В основному встановлюються сервером за допомого заголовка
Set-Cookie, браузер автоматично додає їх у запити на сервер за допомогою
заголовка Cookie. Також можуть бути встановлені браузером через document.cookie.

Якщо скрипт зі стороннього домена в своєму коді користується document.cookie і
встановлює cookie, то такий cookie не вважається стороннім.

На один домен може бути приблизно до 20 cookie.


СПЕЦИФІКАЦІЯ Cookie
-------------------
RFC 6265
https://tools.ietf.org/html/rfc6265


document.cookie
---------------

Це рядок з пар ключ=значення, розділених "; ". Кожна пара є окремим cookie.
Cookie можна записувати через геттер/сеттер, при чому зміниться тільки конкретна
пара, а не всі cookie:

    document.cookie = "user=John";


Деякі символи в ключах і значеннях (напр. пробіл) повинні бути правильно
відформатовані, для цього використовується функція encodeURIComponent:

    let name = "my name";
    let value = "John Smith"

    // my name=John Smith -> my%20name=John%20Smith
    document.cookie = encodeURIComponent(name) + '='+ encodeURIComponent(value);

Після encodeURIComponent одне cookie не повинно бути більше 4Кб.


ДОДАТКОВІ НАЛАШТУВАННЯ Cookie
-----------------------------

вказуються після пари ключ=значення; і відділені двокрапкою:

    document.cookie = "user=John; path=/; expires=Tue, 19 Jan 2038 03:14:07 GMT"


path=/mypath    // АБСОЛЮТНИЙ шлях сторінок (та їхніх дочірніх), на яких cookie
                // будуть досупні.

domain=site.com // домен, на якому куки доступні. Вирішує проблему доменів
                // другого рівня. Без цього налаштування cookie з site.com не
                // видимі для forum.site.com. Застарілий варіант з крапкою
                // domain=.site.com таж працює.

expires         // якщо cookie не має жодного з параметрів expires/max-age,
                // після закриття браузера він видаляється. Якщо в expires
                // вписати стару дату, cookie зникне. Правильний формат:
                //
                //     expires=Tue, 19 Jan 2038 03:14:07 GMT
                //
                // Щоб його отримати, можна використовувати date.toUTCString:
                //
                //     // +1 день від поточної дати
                //     let date = new Date(Date.now() + 86400e3);
                //     date = date.toUTCString();
                //     document.cookie = "user=John; expires=" + date;

max-age=3600    // альтернатива expires, визначає термін дії cookie в секундах з
                // поточного часу. Якщо задати 0 або мінусове число, cookie
                // зникне.

secure          // за замовчуванням cookie не беруть до уваги протоколи, тобто
                // cookie з http://site.com будуть доступні на https://site.com
                // та навпаки. Якщо встановити secure, то cookie з https://
                // будуть не доступні на http://

samesite=strict // (або просто samesite) забороняє відправку cookie на site.com
                // з anotherSite.com

samesite=lax    // те саме, що samesite=strict, але cookie відправиться на інший
                // домен, якщо метод передачі безпечний та операція навігації
                // проходить на верхньому рівні (тобто не у фреймі). Безпечними
                // у даному випадку вважаються методи, які використовуються для
                // читання, а не запису даних, і не виконують жодних дій на
                // зміну даних, наприклад перехід по посиланню (GET).

httpOnly        // cookie стає невидимим для JS через document.cookie