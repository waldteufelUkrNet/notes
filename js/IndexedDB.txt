IndexedDB
================================================================================

ЩО ЦЕ ТАКЕ
----------

IndexedDB - браузерна, локальна база даних. Для додатків клієнт-сервер занадто
потужна, підходить для офлайн додатків, сумісна із ServiceWorkers та іншими
технологіями. Підтримує транзакції, запити в діапазоні ключів та індекси.
Інтерфейс заснований на подіях. Прив'язана до джерела протокол://домен:порт.
На відміну від серверних баз даних має систему версійності.


СПЕЦИФІКАЦІЯ
------------
https://www.w3.org/TR/IndexedDB


СТВОРЕННЯ БАЗИ ДАНИХ
--------------------

створення об'єкту-обгортки для бази даних (клас IDBOpenDBRequest):

    let openRequest = indexedDB.open('name', version);

власне база даних знаходиться за адресою openRequest.result, але пряме звернення
до завершення роботи обробника onsuccess не можливе, воно викликає помилку.
Виклик можливий в обробнику onsuccess або через setTimeout, коли обробник уже
відпрацював.


ПОДІЇ ОБ'ЄКТУ-ОБГОРТКИ openRequest
----------------------------------

onsuccess       // БД готова до роботи, готовий об'єкт openRequest.result

onerror         // не вдалося відкрити БД, об'єкт помилки записується у
                // властивість openRequest.error

onupgradeneeded // БД відкрита, але потребує оновлення. Спрацьовує, коли:
                // 1. локальна версія БД менше, ніж оголошена в .open(),
                // 2. БД ще не існує (так можна ініціалізувати БД).
                // Після завершення роботи викликає onsuccess.

onblocked       // спрацьовує під час спроби оновлення БД (onversionchange),
                // якщо з'єднання з БД не було попередньо закрите


ВЛАСТИВОСТІ ОБ'ЄКТУ-ОБГОРТКИ openRequest
----------------------------------------

error       // сюди записується помилка відкриття БД
readyState  // 
result      // БД, доступна в onsuccess або після його завершення
source      // 
transaction // 


ПОДІЇ БД (openRequest.result)
-----------------------------

onerror         // 
onabort         // 
onclose         // 
onversionchange // спрацьовує при спробі оновити БД, потрібно закрити з'вязок з
                // БД через db.close();


ВЛАСТИВОСТІ БД (openRequest.result)
-----------------------------------

name             // ім'я, вказане під час створення об'єкту-обгортки
version          // версія БД
objectStoreNames // список сховищ, має метод .contains(name);


ВИДАЛЕННЯ БАЗИ ДАНИХ
--------------------

    let deleteRequest = indexedDB.deleteDatabase('name');

    deleteRequest.onsuccess // відслідковує результат видалення БД
    deleteRequest.onerror   // відслідковує результат видалення БД


ЗАКРИТТЯ ЗВ'ЯЗКУ З БД
---------------------

    db.close();


СХОВИЩЕ ОБ'ЄКТІВ
----------------

Є аналогом таблиць в серверних БД. Ключі даних в сховищі можуть бути наступних
типів: Number, Date, String, Binary, Array. Сховища можна створювати/змінювати тільки при оновленні БД в обробнику onupgradeneeded.


СТВОРЕННЯ СХОВИЩА ОБ'ЄКТІВ
---------------------------

    db.createObjectStore(name[, keyOptions]);

    // name - ім'я сховища
    // keyOptions - {
    //   keyPath : 'string',   // шлях до властивості об'єкта, яка буде ключем
    //   autoIncrement : true, // для нових значень ключ формуватиметься
    // }                       // автоматично через ынкремент


Якщо при створенні сховища не вказати ключ, то його доведеться вказувати потім,
при збереженні об'єкта.


ВИДАЛЕНЯ СХОВИЩА ОБ'ЄКТІВ
-------------------------

db.deleteObjectStore('name');