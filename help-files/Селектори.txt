	* { } 								/* універсальний селектор - обирає усі елементи сторінки */
	#id_name { }						/* звертання до id="id_name". У межах одного html-файлу усі id мають унікальні імена. id не може починатися з цифри */
	div#container { }					/* звертання до <div id="container"> */
	.class_name { }						/* звертання до елементів класу class="class_name". Class присвоюється кільком елементам, яким потрібно задати однакові параметри */
	div.class_name { }					/* звертання до усіх div-елементів класу class="class_name". */
	p { }								/* звертання до усіх елементів <p> */
	input[type="text"]{ }				/* звертання до усіх елементів <input> з типом type="text" */
	a[href="https://google.com"] { } 	/* звертання до конкретного посилання */
----------

РЕГУЛЯРНІ ВИРАЗИ

	a[href*="trololo"] { }				/* * - звертання до усіх посилань, які мають в своєму тілі "trololo" */
	[class*="col-"]						/* * - звертання до усіх класів, які мають в своїй назві "col-" */
	a[href^="https"]{ }					/* ^ - звертання до усіх посилань, які мають на початку тіла "https" */
	a[title|="my-title"] { }			/* | - звертання до усіх посилань, у яких значення атрибуту title буде починатися з my-title */
	img[src$=".gif"]{ }					/* $ - звертання до усіх зображень, які мають розширення .gif */
	a[data-filetype="image"] { }		/* звертання до усіх посилань <a href="image.jpg" data-filetype="image"> картинка </a> Для виділення посилань на усі картинки у самі посилання вставляємо data-filetype="image" */
	a[data-info~="external"] { }		/* ~ - звертання до певного значення атрибуту зі списку значень, напр. "<a href="image.jpg" data-info="external image"> Click Me </a> */
----------	

СЕЛЕКТОРИ-КОМБІНАТОРИ

	div a { }							/* звертання до усіх елементів <a>, які знаходяться в елементах <div>, причому будь-якого рівня вкладеності */
	div > a { }							/* звертання до усіх елементів <a>, які є дочірніми щодо елементів <div> */
	div > a > span { }					/* звертання до усіх елементів <span>, які є дочірніми щодо елементів <a>, які у свою чергу є є дочірніми щодо елементів <div> */
	tag1 ~ tag2							/* звертання до усіх елементів <tag2>, які є братніми до <tag> і йдуть після нього */
	tag1 + tag2							/* звертання до одного елементу <tag2>, який є братнім до <tag> і йде після нього */
----------	

СЕЛЕКТОРИ ПСЕВДОКЛАСІВ поділяються на структурні та user interface.
user interface:

	a:link { }							/* звертання до невідвіданих посилань */
	a:visted { }						/* звертання до відвіданих посилань */
	a:hover { }							/* звертання до посилань, на яких зафіксована мишка */					:hover застосовується до усіх об'єктів
	a:active { }						/* звертання до посилань, на яких мишка натиснена і не відпущена */		:active застосовується до усіх об'єктів
	input[type=radio]:checked			/* звернення до radio або checkbox, причому тільки вибраних */
	div:not(#container) { }				/* псевдоклас заперечення: вибір усіх div за винятком <div id ="container">. not() не дозволяє вписувати у себе селектори-комбінатори */
	*:not(p) { }						/* псевдоклас заперечення: вибір усіх елементів, крім параграфів */
	li:not(:last-child) { }				/* звернення до усіх елементів <li> крім останього */
	span:empty { }						/* звернення тільки до пустих елементів: <span></span> */
	h2:target { }						/* звернення до виділеного елементу:
											<a href="#h1">заголовок</a>
											<h2 id="h1">заголовок</h2>
											при натисненні на посилання, браузер перейде до заголовку і застосує до нього потрібні стилі */
	input:focus { }						/* звернення до елементу форми, в якому знаходиться курсор */
	input:enabled { }					/* звернення до усіх незаблокованих полів форм (в яких нема атрибуту disabled) */
	textarea:disabled { }				/* звернення до усіх заблокованих полів форм */
	input:invalid { }					/* звернення до полів форми, заповнених не правильно */
	input:valid { }						/* звернення до полів форми, заповнених правильно */
	input:read-write {}					/* звернення до полів форми, які можливо змінювати */
	input:read-only {}					/* звернення до полів форми, у яких є атрибут readonly */
	input:required  { }					/* звернення до полів форми, заповнення яких є обов'язковим (атрибут required) */
	input:optional { }					/* звернення до полів форми, заповнення яких не є обов'язковим */
	input:out-of-range { }				/* звернення до полів форми, де користувач вийшов за межі min або max:
											input:out-of-range + label::after {
											content: 'невірне значення!';		/* виводимо повідомлення */
											color: #ec008c;						/* колір повідомлення */
											margin-left: 0.5em;					/* відступ зліва */
										   }*/
	input:in-range { }					/* звернення до полів форми, де користувач залишився у межах min або max */
----------

СТРУКТУРНІ СЕЛЕКТОРИ ПСЕВДОКЛАСІВ
загальна формула :xxx(an+b) {}

	li:nth-child(3) { }					/* звертання до третього з початку елементу <li> */
	li:nth-last-child(3) { }			/* звертання до третього з кінця елементу <li> */
	li:nth-child(2n) { }				/* звертання до усіх парних елементів <li> */
	li:nth-child(even)					/* звертання до усіх парних елементів <li> */
	li:nth-child(2n+1) { }				/* звертання до усіх непарних елементів <li> */
	li:nth-child(odd) { }				/* звертання до усіх непарних елементів <li> */
	li:nth-child(3n) { }				/* звертання до кожного третього елементу <li> */
	li:nth-child(-n+10) { }				/* звертання до елементів <li> з 1 по 10 */
	
	ul:nth-of-type(3) { }				/* звертання до третього елементу <ul> */
	
	!!! до -of-type можна засосовувати усі ті прийоми, що і до -child.
	!!! -last- змінює напрям відліку, усі вищевказані псевдокласи можна модифікувати під нього.
	
	li:first-child { }					= li:nth-child(1) { }
	li:last-child { }					= li:nth-last-child(1) { }
	
	div p:only-child { }				/* звертання до усіх <p>, які у своїх <div> є єдиними дочірніми */
	div p:only-of-type { }				/* звертання до усіх <p>, які у своїх <div> є єдиними дочірніми <p> (інші типи елементів не враховуються) */
	
	різниця між -child та -of-type:
		-child		1. спочатку проводить селектування по (an+b) 2. потім, якщо тип збігається, застосовує до нього стиль.
		-of-type	1. спочатку вибирає усі елементи одного типу 2. потім проводить селектування по (an+b).
----------

ПСЕВДОЕЛЕМЕНТИ
	div::after { }						/* створення неіснуючого елементу в контейнері div та поміщення його в кінець */
	div::before { }						/* створення неіснуючого елементу в контейнері div та поміщення його на початок */
	p::first-line { }					/* звернення до першого рядку */
	p::first-letter { }					/* звернення до першої букви */
	input::placeholder { }				/* звернення до тексту-підказки у формі */
	p::selection { }					/* звернення до тексту, виділеного мишкою */
----------

ВАЖЛИВІСТЬ СЕЛЕКТОРІВ

	!important
	inline-style
	id
	class / pseudoclass / attribute
	tag
	browser default