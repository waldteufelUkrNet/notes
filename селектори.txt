Селектори
================================================================================

СЕЛЕКТОРИ
---------

*                            // універсальний селектор - обирає усі елементи
tag                          // елемент <tag>
#id_name                     // елемент з id="id_name"
tag#id_name                  // елемент <tag id="id_name">
.class_name                  // елементи з class="class_name"
.class1.class2               // елементи з обома класами
.class1 .class2              // елементи з .class2, які знаходяться всередині
                             // елементів з .class1
tag.class_name               // tag-елементи з класом class="class_name".
input[type="text"]           // <input type="text">
a[href="https://google.com"] // <a href="https://google.com">


СЕЛЕКТОРИ-КОМБІНАТОРИ
---------------------

div a          // елементи <a>, які знаходяться в елементах <div>, будь-якого
               // рівня вкладеності
div > a        // елементи <a>, які є дочірніми щодо елементів <div>
div > a > span // елементи <span>, які є дочірніми щодо елементів <a>, які у
               // свою чергу є дочірніми щодо елементів <div>
tag1 ~ tag2    // елементи <tag2>, які є братніми до <tag> і йдуть після нього
tag1 + tag2    // елементу <tag2>, який є братнім до <tag> і йде після нього


ВАЖЛИВІСТЬ CSS-СЕЛЕКТОРІВ
-------------------------

!important                     // 100000
inline-style                   // 010000
id                             // 001000
class/ pseudoclass / attribute // 000100
tag                            // 000010
browser default                // 000001


РЕГУЛЯРНІ ВИРАЗИ
----------------

[attr]           // атрибут встановлено
[attr="val"]     // атрибут має значення "val"
[attr^="val"]    // атрибут починається з "val"
[attr|="val"]    // атрибут рівний "val" або починається з "val-"
[attr*="val"]    // атрибут містить підрядок "val"
[attr~="val"]    // атрибут містить "val" як одне зі значень через пробіл
[attr$="val"]    // атрибут закінчується на "val"

tag[class*="…"]  // елементи tag з класами, які мають в своїй назві рядок "…"
a[href*="…"]     // посилання, які мають в своєму тілі "…"
a[href^="…"]     // посилання, які мають на початку рядок "…"
a[href|="…"]     // посилання, які мають рядок "…" (на початку з - або рівний)
img[src$=".gif"] // зображення, які мають розширення ".gif"


ПСЕВДОЕЛЕМЕНТИ
--------------

div::after         // створення не існуючого елементу в контейнері div та
                   // поміщення його в кінець
div::before        // створення не існуючого елементу в контейнері div та
                   // поміщення його на початок
p::first-line      // перший рядок, можна змінити font properties, color
                   // properties, background properties, word-spacing,
                   // letter-spacing, text-decoration, vertical-align,
                   // text-transform, line-height, clear
p::first-letter    // перша буква, можна змінити font properties, color
                   // properties, background properties, margin properties,
                   // padding properties, border properties, text-decoration,
                   // vertical-align  (only if "float" is "none"),
                   // text-transform, line-height, float, clear
input::placeholder // текст-підказка у формі
p::selection       // текст, виділений мишкою, можна змінити color, background,
                   // cursor, outline


СЕЛЕКТОРИ ПСЕВДОКЛАСІВ (user interface)
---------------------------------------

a:link                      // невідвідані посилання
a:visted                    // відвідані посилання
a:hover                     // посилання, на яких наведена мишка. :hover
                            // застосовується до усіх об'єктів
a:active                    // посилання, на яких мишка натиснена і не
                            // відпущена. :active застосовується до усіх
                            // об'єктів
input[type=radio]:checked   // radio/checkbox, причому тільки вибрані
div:not(#container)         // усі div за винятком <div id="container">. not()
                            // не дозволяє вписувати у себе
                            // селектори-комбінатори
*:not(p)                    // усі елементи, крім параграфів
li:not(:last-child)         // усі елементи <li> крім останнього
a:not(:last-of-type)::after // створення не існуючих елементів в усіх
                            // посиланнях, крім останнього, та поміщення його в
                            // кінець
span:empty                  // пусті елементи: <span></span>
h2:target                   // звернення до виділеного елементу:
                            //   <a href="#h1">заголовок</a>
                            //   <h1 id="h1">заголовок</h1>
                            // при натисненні на посилання, браузер перейде до
                            // заголовку і застосує до нього потрібні стилі
input:focus                 // поле форми, в якому знаходиться курсор
input:enabled               // усі незаблоковані поля форм (в яких нема атрибуту
                            // disabled)
textarea:disabled           // усі заблоковані поля форм
input:placeholder-shown     // поля форми, у яких видна підказка
input:invalid               // поля форми, заповнені не правильно
input:valid                 // поля форми, заповнених правильно
input:read-write            // поля форми, які можливо змінювати
input:read-only             // поля форми, у яких є атрибут readonly
input:required              // поля форми, заповнення яких є обов'язковим
                            // (атрибут required)
input:optional              // поля форми, заповнення яких не є обов'язковим
input:out-of-range          // поля форми, де користувач вийшов за межі min або
                            // max
input:in-range              // поля форми, де користувач залишився у межах min
                            // або max


СЕЛЕКТОРИ ПСЕВДОКЛАСІВ (структурні)
-----------------------------------

загальна формула :xxx(an+b) {…}


li:nth-child(3)      // звертання до третього з початку елементу <li>
li:nth-last-child(3) // звертання до третього з кінця елементу <li>
li:nth-child(2n)     // звертання до усіх парних елементів <li>
li:nth-child(even)   // звертання до усіх парних елементів <li>
li:nth-child(2n+1)   // звертання до усіх непарних елементів <li>
li:nth-child(odd)    // звертання до усіх непарних елементів <li>
li:nth-child(3n)     // звертання до кожного третього елементу <li>
li:nth-child(-n+10)  // звертання до елементів <li> з 1 по 10

ul:nth-of-type(3)    // звертання до третього елементу <ul>

div p:only-child     // звертання до усіх <p>, які у своїх <div> є єдиними
                     // дочірніми
div p:only-of-type   // звертання до усіх <p>, які у своїх <div> є єдиними
                     // дочірніми <p> (інші типи елементів не враховуються)


РІЗНИЦЯ МІЖ -child ТА -of-type:
-------------------------------

-child   : 1. спочатку проводить селекцію по (an+b)
           2. потім, якщо тип збігається, застосовує до нього стиль.
-of-type : 1. спочатку вибирає усі елементи одного типу
           2. потім проводить селекцію по (an+b).

До -of-type можна застосовувати усі ті прийоми, що і до -child.
-last- змінює напрям відліку, усі вищевказані псевдокласи можна модифікувати під
нього.

li:first-child {…} = li:nth-child(1) {…}
li:last-child {…}  = li:nth-last-child(1) {…}