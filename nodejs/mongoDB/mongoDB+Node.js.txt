// можливий синтаксис на колбеках або на промісах. Якщо вказувати другим
// агрументом колбек, проміс не повертається

const MongoClient = require('mongodb').MongoClient,
      url         = 'mongodb://localhost:27017/';


MongoClient.connect(url, function(err, db) {
  if (err) throw err;

  // створити об'єкт для роботи з бд
  let dbo = db.db('w3s');

  // додати в бд колекцію
  dbo.createCollection("customers", function(err,result){
    if (err) throw err;
    console.log('db created');
    db.close();
  });

  // додати об'єкт в бд (створиться колекція, якщо її ще нема)
  // insertOne/Many повертає об'єкт з результатом зміни бази res, він має
  // властивості, які можна прочитати
  // insertOne({}, function(err, result) {…});
  // insertMany([{},{},{}], function(err, result) {…});
  let myobj = {name: "Company Inc", address: "Highway 37"};
  dbo.collection("customers").insertOne(myobj, function(err, result) {
    if (err) throw err;
    console.log("1 document inserted");
    db.close();
  });

  // пошук - findOne({},function(err,result){…})
  //         find({}).toArray(function(err,result){…});
  //         find({},{ projection: { _id: 0, name: 1, address: 1 } }).toArray(function(err,result){…});
  dbo.collection("customers").findOne({}, function(err, result) {
    if (err) throw err;
    console.log(result.name);
    db.close();
  });

  // deleteOne/deleteMany
  dbo.collection("customers").deleteOne({ address: 'Mountain 21' }, function(err, obj) {
    if (err) throw err;
    console.log("1 document deleted");
    db.close();
  });

  // delete collection, result == boolean
  dbo.collection("customers").drop(function(err, result) {…});
  dbo.dropCollection("customers", function(err, result) {…});

  // updateOne/updateMany
  let myquery = { address: "Valley 345" },
      newvalues = { $set: {name: "Mickey", address: "Canyon 123" } };
  dbo.collection("customers").updateOne(myquery, newvalues, function(err, res) {
    if (err) throw err;
    console.log("1 document updated");
    db.close();
  });
});