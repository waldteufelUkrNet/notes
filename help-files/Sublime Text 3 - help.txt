temp:
клавіатурні скорочення sublime, шпора кантера і pdf

відео по emmet + шпора
відео по gist на web developer blog

як виключити плагін, не видаляючи його?
автокомпліт - автопідказка абощо
паг в хтмл і навпаки
========================================================================================================================

========================================================================================================================
Sublime Text 3
------------------------------
https://www.sublimetext.com/3
https://sublimetext.ru/documentation
========================================================================================================================

========================================================================================================================
НАЛАШТУВАННЯ Sublime Text 3
------------------------------

Налаштування опцій:

Preferences > Settings
  "save_on_focus_lost": true,       // автозбереження при втраті фокусу
  "font_face": "Consolas",          // встановлення свого шрифта
  "tab_size": 2,                    // табуляція в два пробіли
  "word_wrap": true,                // перенесення слів на новий рядок
  "highlight_line": true,           // підсвічування рядка, на якому знаходиться курсор
  "translate_tabs_to_spaces": true, // замінювати таби на пробіли
  "show_definitions": false         // скасувати появу попапу з оголошеннями функцій

------------------------------

Налаштування клавіатурних скорочень:

Preferences > Key Bindings
{"keys": ["alt+ctrl+a"], "command": "reindent", "args": {"single_line": false}} // комбінація клавіш для вирівнювання відступів виділеного тексту

------------------------------

Клавіатурні скорочення Sublime:

виставлення кількох курсорів - затиснути скрол і провести мишкою

Ctrl+D           пошук наступного ідентичного підрядка в тексті і його виділення.  Кожний наступний натиск на комбінацію
                 шукає ще один ідентичний підрядок і виділяє його.

Ctrl+P           навігація по файлах і в документі (Goto Anything menu)
                 :number - перевести курсор на потрібний рядок
                 #string - пошук у тексті

                 xcc is used to select the file xla_compilation_cache.cc, @ switches to symbol mode, and :c selects the XlaCompilationCache::Compile method.

Ctrl+Shift+R     пошук оголошених стилів CSS (Goto Definition)

Ctrl+R           (Goto Symbol) в js-файлі виводить список функцій

Ctrl+L           виділення рядка, на якому знаходиться курсор та опускання курсору на рядок нижче. Можна виділити багато
                 рядків, затиснувши комбінацію.

??? Ctrl+Shift+F     розширени пошук (це точно дефолт, а не з якогось пакунку?)

------------------------------

Клавіатурні скорочення пакунків:

Ctrl+Shift+P     командний рядок Sublime

Ctrl+Alt+N       створення файлів і тек (AdvancedNewFile)

Ctrl+Shift+T     відкрити термінал в поточному документі (Terminal)
Ctrl+Alt+Shift+T відкрити термінал в кореневій теці проекту (Terminal)

-Ctrl+Alt+F       відкриття файлу у браузері firefox (View In Browser)
Ctrl+Alt+C       відкриття файлу у браузері chrome (View In Browser)
Ctrl+Alt+O       відкриття файлу у браузері opera (View In Browser)
Ctrl+Alt+I       відкриття файлу у браузері IE (View In Browser)

Ctrl+Shift+H     демініфікація мініфікованих файлів (HTML-CSS-JS Prettify)

Ctrl+Alt+A       вирівнювання пар ключ-значення CSS/JS по розділовому знаку (Alignment)

Ctrl+Alt+Shift+F вирівнювання html коду (HTMLBeautify)

-Ctrl+Alt+F       вирівнювання JS (jsFormat)

-Ctrl+Shift+C     виклик панелі кольорів пакунку ColorPicker

-Ctrl+Shift+C     виклик панелі кольорів пакунку Color Highlighter
Ctrl+Shift+      зміна формату кольору (Color Highlighter)

Ctrl+Shift+Q     console.log (Console Wrap)

-Ctrl+Alt+F       на виділеному тезі або властивості, відкриється Can I Use (Can I Use)

Ctrl+Alt+M       мініфікація файлів CSS та JS, прибирання коментарів (Minifier)
Ctrl+Alt+Shift+M створення нового мініфікованого файлу із суфіксом min (Minifier)

-Ctrl+Shift+C     виділити шмат CSS-коду і відсортувати властивості у правильній послідовності (CSSComb)

------------------------------

Копіювання своїх налаштувань та пакунків:

тека Sublime Text Build 3176 x64\Data\Packages

------------------------------

Особливості Linux:

show menu sublime linux:
Ctrl+Shift+p then type vmen

========================================================================================================================

========================================================================================================================
ВСТАНОВЛЕННЯ ПАКУНКІВ
------------------------------

Встановлення пакунку, якого нема в репозиторії:

вставити завантажений і розпакований пакунок в теку Sublime Text Build 3176 x64\Data\Packages

------------------------------

Установка PackageControl:

1.  https://packagecontrol.io/installation#st3

	відкрити консоль: Ctrl+~ або View > Show Console

	та вставити:

	import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)

	або

2.  Ctrl+Shift+P та ввсести "Install Package Control"

------------------------------

Використання PackageControl

1.	Preferences > Package Control

    або

2.  Ctrl+Shift+P

    та набрати

Package Control: Install Packages // для установки пакета,
Package Control: Remove Package   // для видалення пакета,
Package Control: List Packages    // для перегляду встановлених пакетів.

------------------------------

========================================================================================================================
ПАКУНКИ Sublime Text 3
------------------------------

"Системні":
----------
Emmet                        : автостворення тегів та конструкцій по скорочених інструкціях
LiveReload                   : автоматичне  перезавантаження  браузера  при  збереженні  змін в HTML, CSS, JS. Для цього
                               після встановлення плагіна потрібно:  Ctrl+Shift+P,  прописати  live  reload  та  вибрати
                               LiveReload: Enable/Diasble plug-ins > Enable - Simple Reload.  Потім в HTML-файл потрібно
                               вставити скрипт: Snippet: Insert livereload.js script
SideBarEnhancements          : розширення  функціоналу бічної  панелі, напр.  reveal  з  контекстного меню  відкриє теку
                               розташування теки/файла
A File Icon                  : візуалізація значків файлів
AdvancedNewFile              : зручне створення  файлів і тек Ctrl+Alt+N.  Для тек - після назви поставити косу риску /.
                               Створення відбувається відносно кореневої теки проекту.
Terminal                     : дозволяє відкрити термінал через Sublime. В поточному документі - Ctrl+Shift+T,  коренева
                               тека  проекту  -  Ctrl+Alt+Shift+T. У  налаштуваннях  можна  вибрати свій термінал (напр.
                               "terminal": "C:\\TCWL\\Program Files\\02.programming\\PortableGit\\git-cmd.exe"  -  друга
                               коса риска потрібна для екранування першої).
Terminus                     : емулятор термінала (https://packagecontrol.io/packages/Terminus). Для  призначення  своєї
                               cmd (базова не може працювати з git) у файлі settings потрібно прописати:
                                {
                                  "default_config": {
                                    "windows": "myOwn"
                                  },
                                  // a list of available shells to execute
                                  "shell_configs": [
                                    {
                                      "name": "myOwn",
                                      "cmd": "..\\PortableGit\\git-cmd.exe",
                                      "env": {},
                                      "enable": true,
                                      "platforms": ["windows"]
                                    }
                                  ],
                                }

View In Browser              : відкриття  файлу  у  відповідному  браузері:  Ctrl+Alt+F - firefox,  Ctrl+Alt+C - chrome,
                               Ctrl+Alt+O - opera, Ctrl+Alt+I - IE
HTML Nest Comments           : в стандартному HTML не можна закоментувати  код,  в  якому  уже  є  коменти.  Цей  плагін
                               виправляє дану проблему.
Random Everything            : генерування випадкових значень: пошт, телефонів тощо. Працює через Ctrl+Shift+P.
ClickableURLs                : відкриває посилання. Навести курсор на url і натиснути ctrl+alt+enter


Вирівнювання:
------------
HTML-CSS-JS Prettify         : впорядковує код HTML/CSS/JS (ідентація), ДЕМІНІФІКАЦІЯ мініфікованих файлів Ctrl+Shift+H
Alignment                    : вирівнювання пар ключ-значення CSS/JS по розділовому знаку (Ctrl+Alt+A) В SCSS не працює.
(HTMLBeautify)               : вирівнювання html коду Ctrl+Alt+Shift+F
(jsFormat)                   : вирівнювання JS чезез контекстне меню або Ctrl+Alt+F


Підсвітка:
---------
Pug                          : підсвітка синтиксису pug
SCSS                         : підсвітка синтаксису scss/sass
CSS3                         : підсвітка синтаксису css3
BracketHighlighter           : показує, де закривається і відкривається  тег (підкреслення тегу та маркування на полях).
                               Можна підсвічувати блок, в якому знаходиться курсор, змінювати типи дужок/лапок тощо.
TrailingSpaces               : підсвітка зайвих пробілів в кінці рядків. Можливість їх видалити при збереженні документа
                               (в налаштуваннях "trailing_spaces_trim_on_save": true).
Color Highlight              : підсвічування кольорів
ColorPicker                  : Ctrl+Shift+C - виклик панелі кольорів (але не такої, як у Color Highlighter)
(Color Highlighter)          : підсвічування  кольорів.  В  контекстному  меню  є  Insert  color  with  color picker (це
                               встановлює .NET Framework 2.0 - 3.5).  Ctrl+Shift+C  -  виклик  панелі  кольорів  (аналог
                               ColorPicker), Ctrl+Shift+, - зміна формату кольору.
StyleToken                   : підсвітка довільних фрагментів коду для пошуку співпадінь і орієнтування в коді.
HTML (C#)                    : підсвітка C#-коду
Dockerfile Syntax Highlighting : підсвітка коду в Dockerfile
nginx                        : Improved syntax support for Nginx configuration files
DotENV                       : Syntax Highlighting support for Environment (.env) Files
GraphQL

Підказки:
--------
AutoFileName                 : робить підказки для шляхів і назв файлів при їх підключенні
All Autocomplete             : робить підказки (здійснює пошук співпадінь в усіх відкритих вкладках поточного вікна)
Nodejs                       : підказки для node.js


Різне:
-----
Console Wrap                 : на виділеній змінній - Ctrl+Shift+Q - і внизу з'явиться рядок із console.log
Can I Use                    : якщо виділити тег або властивість і Ctrl+Alt+F - відкриється Can I Use
Minifier                     : мініфікує  файли  CSS  та  JS,  прибирає  коментарі (Ctrl+Alt+M) або Ctrl+Alt+Shift+M для
                               створення нового файлу із суфіксом min.
DocBlockr                    : написання документації для JS: перед функцією або змінною набрати /** та натиснути  Enter
                               або для однорядкового коментаря - Shift+Enter
Markdown HTML Preview        : ctrl+shift+m відкриває браузер і показує, як виглядає md-файл


Лінтери (перевірка коду):
------------------------

SublimeLinter
SublimeLinter-eslint
SublimeLinter-json
SublimeLinter-pug-lint
SublimeLinter-contrib-dockerfilelint - лінтер для докера, не встановлюється (помилка)
SublimeLinter-contrib-nginx-lint - лінтер для nginx, не встановлюється (помилка)


Не актуально:
------------
(Autoprefixer)               : додає вендорні префікси в CSS. Після встановлення потрібно виділити клас із властивостями
                               потім набрати Ctrl+Shift+P і потім - Autoprefix CSS. В системі збірки Gulp не потрібен.
(Go-To-CSS-Declaration)      : дозволяє  в  HTML  вибрати  клас  і  через контекстне меню перейти в CSS-файлі в місце із
                               властивостями класу. Не працює в SCSS.
(CSSComb)                    : Ctrl+Shift+C - дозволяє виділити шмат CSS-коду і відсортувати  властивості  у  правильній
                               послідовності. Не працює в SCSS.


Не оцінив:
---------
Colorcoder                   : замінює стандартну підсвітку синтаксису на довільну


Подивитися на майбутнє:
----------------------
SublimeCodeIntel             : автокомпліти стандартних функцій js + можливість шукати місця, де оголошена функція (навіть якщо вона оголошувалася у іншому файлі - контекстне меню: Jump to Symbol Definition)
JavaScript Completions       : автокомпліт стандартних функцій в JS
Bootstrap 3 Snippets / Bootstrap 4 Snippets : автокомпліти розмітки bootstrap
Tag                          : підсвітка крапкою збоку помилки у розмітці (напр. відсутність закриваючого тегу), дозволяє швидко скопіювати усі класи css з html коду або фрагменту, дозволяє вирівняти код html, видалення тегів тощо.
WordPress                    : робота з WordPress
CSS Extended Completions     : додавання міксинів в кеш і потім використання їх з кешу за допомою автокомпліта
Inc-Dec-Value                : збільшення/зменшення цифр, букв в словах на великі/малі, true на false тощо. Можна створити власний словник замін і налаштувати клавіатурні скорочення для заміни слів.
jQuery                       : підказки-автокомпліти для jQuery. У парах ключ-значення зручно бігати TAB'ом.
GIT                          : ??????????
GIST                         : завантаження шматків коду з gist.github.com, для використання потрібен персональний токен, його вписують в Settings-user плагіна. Для вставки гіста Ctrl+K+O?
SASS                         : ?????????? - без нього не працює Emmet у файлах .sass
MarkdownPreview              : показує, як виглядає md-файл, має складні налаштування, інтегрується з LiveReload

GraphQL                      : GraphQL IDL syntax highlighting for Sublime Text
FindKeyConflicts
React IDE
FindInProject                : Text search plugin for Sublime Text 3 projects  не встановлюється!
FileFinder                   : Sublime Filefinder plugin
Search in Project            : Use ag, ack, grep and git grep directly from Sublime Text 2 and 3
Debugger
Sublimerge 3
Clipboard Manager vs Clipboard History
PlainTasks(https://xakep.ru/2014/07/28/sublime-text-not-for-coding/) є інструкції на сайті packagecontroll.io або Preferences → Package Settings → PlainTasks → Tutorial

: + \n заголовок
**bold**
_italic_

ctrl+enter   нова задача
ctrl+i       нова задача
ctrl+d       помітити задачу як зроблену
alt+c        помітити задачу як скасовану
ctrl+shift+a архівувати зроблену задачу (вилучити з тексту і помістити вниз)

теги (помітки)
  @tag
  правий клік на тегу - Filter by tags under cursors - приховує все, крім задач з конкретним тегом
  ctrl+k або ctrl+j або (ctrl+k, ctrl+0) знову усе показати

ctrl+shift+U відкрити посилання у файлі .todo

alt+o - відкрити файл. шлях до файла повинен починатися з .\ або ./

пршоритетність і час не працюють (




Emmet
-----

  Thank you for installing Emmet -- a toolkit that can greatly improve your workflow. Note that this plugin automatically downloads and installs PyV8 binary (see status bar message). 
  
  ******************************
  Please restart editor 
  to finish installation process 
  after PyV8 was downloaded.
  ******************************
  
  Tab key handler
  ==========================
  
  By default, Emmet allows you to expand abbreviations with Tab key in HTML, XML, HAML and CSS/SASS/LESS/Stylus documents. As a side effect, you can’t use some of your ST2 snippets.
  
  Please read https://github.com/sergeche/emmet-sublime#tab-key-handler about how Tab handler works and how to tweak its behavior to match your needs.
  
  Enter key
  ==========================
  
  In HTML and XML documents, Emmet overrides Enter key to insert formatted line breaks between opening and closing tags. In some cases it will break character input (for example, in Japanese language).
  
  To disable Enter key handler, simply add the following option in your user's Preferences file:
  
  "disable_formatted_linebreak": true
  
  Actions shortcuts
  ==========================
  
  Emmet has a number of actions with keyboard shortcuts that may override ones you're using commonly (for example, Ctrl-E or Ctrl-Down). Please read the project main page to get list of available actions and keyboard shortcuts and how to disable them:
  https://github.com/sergeche/emmet-sublime
  
  Documentation and examples:
  http://emmet.io


LiveReload
----------

  Changelog:
  
  Please be sure to restart Sublime Text to start using this new version. For more information or how to use this plugin visit https://github.com/alepez/LiveReload-sublimetext3


AdvancedNewFile
---------------

  Thank you for installing the AdvancedNewFile plugin.
  
  For more information please visit https://github.com/skuroda/Sublime-AdvancedNewFile.
  
  Note you may need to restart Sublime Text after installing this plugin.
  
  If you have any questions, comments, or run into issues, please let me know! Hope you enjoy the plugin.
  
  Thank you!


HTML Nest Comments
------------------

  HTML Nest Comments
  ------------------
  
  You can now nest HTML comments like a pro.
  
  Documentation and usage is available on Github:
  https://github.com/philsinatra/HTML-Nest-Comments
  
  If you encounter a bug or want to contribute, please open an issue:
  https://github.com/philsinatra/HTML-Nest-Comments/issues


TrailingSpaces
--------------

  
  
      Thank you for installing Trailing Spaces
      ----------------------------------------
  
      You're now ready to give trailing spaces *a hard time*!
  
  
  Documentation
  =============
  
  Although the usage of this plugin is dead simple, it comes with several options. All
  details are available in the documentation, and you can read it by clicking on
  "Preferences / Package Settings / Trailing Spaces / Help", or in a prettier form, by
  browsing https://github.com/SublimeText/TrailingSpaces.
  
  Key Binding
  ===========
  
  This plugin does not come with a default key binding for the deletion command. You can
  pick your own key binding and define it in "Preferences / Key Bindings - User", or just
  stick to using the menu entry under "Edit". Check the help for advice on this.
  
  Upgrades & Issues
  =================
  
  Package Control will automatically update all packages every time the editor is started,
  so there is nothing for you to worry about. If you however do find the plugin not to work
  as it used to, head to the issues tracker (see links below) to report the problem.
  
  Useful Links
  ============
  
  * Documentation & Code: https://github.com/SublimeText/TrailingSpaces
  * Report issues / Request New Features / Roadmap: https://github.com/SublimeText/TrailingSpaces/issues
  * Follow me on twitter: @jdvauguet


Color Highlighter
-----------------

  
  Color Highlighter v8.0 is released!
  
  For more info about the plugin visit https://github.com/Monnoroch/ColorHighlighter.
  
  Color Highlighter was developed for many years and features were added without consideration.
  As a result it has plenty of bugs and code is completely unmaintainable.
  Because of it, I've decided to rewrite the plugin from scratch using all the good programming practices I learned
  over the years.
  
  This is the first release of the new version and it might have some subtle bugs, especially on Windows and Mac, as I
  don't have machines with these systems. If you find any bugs, please file them in
  the bug tracker here: https://github.com/Monnoroch/ColorHighlighter/issues. I always appreciate your help and try to fix
  problems as soon as possible.
  
  The plugin is being developed by me alone in my spare time, so if you want to encourage me to build it
  better and faster, donations as always welcome.
  
  Thank you guys for your support, every little bit helps!


Console Wrap
------------

  Console Wrap 
  ===============================
  
  If you like this plugin, "Star" it on ---> https://github.com/unknownuser88/consolewrap <---
  
  
  Summary
  ===========
  
  This plugin helps you easily create (comment, remove, show all) log statements (console.log, print etc.)
  
  It places selected variable in log statement like console.log("variable", variable);
  
  This is not a snippet. 
  
  
  Supported languages
  =======================
  
  * Javascript
  * Python
  * Php
  
  
  Usage
  =============
  
  First you need to select a variable (or put cursor on it) and press `"ctrl+shift+q"`. The log line will appear on the next line. Press `"ctrl+shift+q"` again to change wrapping (info,warn etc.)
  
  You can Also remove, comment or remove commented log statements from your selsection or from all document
  you can find that functionality in context menu (right click) or Command Palette (command+shift+p on OS X, control+shift+p on Linux/Windows).
  
  
  Key Binding
  ==================
  
  The default key binding is `"ctrl+shift+q"` and `"ctrl+shift+alt+q"` (insert before selection).
  
  { 
      "keys": ["ctrl+shift+q"], 
      "command": "console_wrap",
      "args": {"insert_before": false}
  },
  { 
      "keys": ["ctrl+shift+alt+q"], 
      "command": "console_wrap",
      "args": {"insert_before": true}
  }
  
  
  
  Commands
  ===============
  
  {
      "caption": "Console Wrap: Create logs",
      "command": "console_wrap"
  }, {
      "caption": "Console Wrap: Remove logs",
      "command": "console_action",
      "args": {"action": "remove"}
  }, {
      "caption": "Console Wrap: Remove Commented logs",
      "command": "console_action",
      "args": {"action": "remove_commented"}
  }, {
      "caption": "Console Wrap: Comment logs",
      "command": "console_action",
      "args": {"action": "comment"}
  }, {
      "caption": "Console Wrap: Show all logs",
      "command": "console_action",
      "args": {"action": "show_quick_nav"}
  }
  
  
  Settings
  ===============
  
  
  {
      "js": {
          "consoleStr"   : "{title}, {variable}", // "{title}, tmpVal = {variable}" to assigne value to temporary parameter output: console.log('title', tmpVal = variable);
          "consoleFunc"  : ["console", "log"],    // You can change default log statement for example ["logger", "info"] output: logger.info('title', variable);
          "single_quotes": false,                 // If true output: console.log('title', variable);
          "semicolon"    : true,                  // If false, will not add semicolon at end of line
          "log_types"    : ["log", "info", "warn", "error"]
      },
      "py": {
          "consoleStr"   : "{title}, {variable}",
          "consoleFunc"  : ["print"],
          "single_quotes": false
      },
      "php": {
          "consoleFunc"  : ["print_r"],   // var_dump or if you have custom logger ["$logger", "debug"] output: $logger->debug($variable);
          "preTag"       : true,          // Put log in pre tag like echo '<pre>'; print_r($variable); echo '</pre>';
          "dieAfterLog"  : false          // echo '<pre>'; print_r($variable); echo '</pre>'; die();
      },
      "fileTypeMap" : {                   // Maps file type to wrapper. For example "text.html.vue": "js" means use js wrapper in vue js files
          "text.html.vue"  : "js",        // php,python,js is included by dafault ("embedding.php": "php", "source.js": "js", "source.python": "py")
          "source.ts"      : "js",
          "source.tsx"     : "js",
          "source.coffee"  : "js",
          "text.html.basic": "js",
          "text.html.blade": "js",
          "text.html.twig" : "js"
      }
  }


Sublimerge 3
------------

  The first steps after installation
  ==================================

  1. By default Sublimerge's colors theme conforms to default Sublime Text theme. If you are using some
     custom theme and find the colors poorly visible, you may need to change them.

  2. If you're on Windows and want to use VCS-related commands, you may need to configure the executable
     path for your VCS. Linux and OS X users with non-standard VCS installation may need to configure this too.


  Please visit http://www.sublimerge.com/sm3/docs/configuration.html for more information about configuration.



  Simplified usage instructions
  =============================

  In file view:

      [ctrl]+[alt]+[d]                      - display Quick Panel with commands available for current view


  In diff view:

      Windows/Linux:

      [ctrl]+[down]                         - select next change
      [ctrl]+[up]                           - select previous change
    * [ctrl]+[left]                         - copy selected change (or active line) to left from right
    * [ctrl]+[right]                        - copy selected change (or active line) to right from left
      [ctrl]+[shift]+[left]                 - copy all changes to left from right
      [ctrl]+[shift]+[right]                - copy all changes to right from left

      OSX:

      [alt]+[down]                          - select next change
      [alt]+[up]                            - select previous change
    * [alt]+[left]                          - copy selected change (or active line) to left from right
    * [alt]+[right]                         - copy selected change (or active line) to right from left
      [alt]+[shift]+[left]                  - copy all changes to left from right
      [alt]+[shift]+[right]                 - copy all changes to right from left

      Common:

      [f3]                                  - swap panels
      [f4]                                  - show changes navigator
      [f5]                                  - recompare buffers

    * - if change is selected the command will copy its whole contents, otherwise will copy only the focused line


  In directories diff view:

      [down]                              - select next file/directory
      [up]                                - select previous file/directory
      [left]                              - copy file/directory from right to left
      [right]                             - copy file/directory from left to right
      [enter]                             - enter sub directory / compare text files
      [backspace]                         - enter parent directory


      Windows/Linux:

      [ctrl]+[down]                       - select next different file/directory
      [ctrl]+[up]                         - select previous different file/directory


      OS X:

      [alt]+[down]                        - select next different file/directory
      [alt]+[up]                          - select previous different file/directory


      For convenience Sublimerge also supports standard OS X keyboard shortcuts for directories navigation:

      [cmd]+[down]                        - enter sub directory / compare text files
      [cmd]+[up]                          - enter parent directory